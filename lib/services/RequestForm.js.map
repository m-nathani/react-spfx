{"version":3,"sources":["services/RequestForm.ts"],"names":[],"mappings":";;;;;;;;;;AAEa,QAAA,MAAM,GAAG;IACpB,UAAU,EAAE;QACV,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,wBAAwB;aAClC;SACF;KACF;IACD,UAAU,EAAE;QACV,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,wBAAwB;aAClC;SACF;KACF;IACD,KAAK,EAAE;QACL,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,+BAA+B;aACzC;SACF;KACF;IACD,WAAW,EAAE;QACX,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,oCAAoC;aAC9C;SACF;KACF;IACD,KAAK,EAAE;QACL,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,OAAO;gBACb,OAAO,EAAE,gCAAgC;aAC1C;YACD;gBACE,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,2BAA2B;aACrC;SACF;KACF;IACD,QAAQ,EAAE;QACR,YAAY,EAAE,IAAI;QAClB,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,yBAAyB;aACnC;SACF;KACF;IACD,KAAK,EAAE;QACL,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,yBAAyB;aACnC;SACF;KACF;IACD,MAAM,EAAE;QACN,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,yBAAyB;aACnC;SACF;KACF;CACF,CAAC;AAEF,oBAA2B,GAAQ,EAAE,WAAgB;IACnD,IAAI,GAAG,EAAE;QACP,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QAC5B,OAAO,GAAG,CAAC;KACZ;IAED,0CAA0C;IAC1C,IAAM,UAAU,GAAyB,WAAW,CAAC,cAAc,CAAC,CAAC;IACrE,IAAM,cAAc,GAAyB,WAAW,CAAC,mBAAmB,CAAC,CAAC;IAC9E,IAAM,MAAM,gBACP,WAAW,IACd,aAAa,EAAE,WAAW,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,EAC9D,kBAAkB,EAAE,WAAW,CAAC,kBAAkB,CAAC,CAAC,MAAM,CACxD,qBAAqB,CACtB,EACD,cAAc,EAAE;YACd,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;YAClC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;SACnC,EACD,mBAAmB,EAAE;YACnB,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC;YAC/C,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC;SAChD,EACD,aAAa,EAAE,WAAW,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,GAC7D,CAAC;IACF,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;IACjD,OAAO,MAAM,CAAC;AAChB,CAAC;AA3BD,gCA2BC","file":"services/RequestForm.js","sourcesContent":["import moment from 'moment';\n\nexport const config = {\n  datePicker: {\n    rules: [\n      {\n        type: 'object',\n        required: true,\n        message: 'Please fill the date !'\n      }\n    ]\n  },\n  timePicker: {\n    rules: [\n      {\n        type: 'object',\n        required: true,\n        message: 'Please fill the time !'\n      }\n    ]\n  },\n  range: {\n    rules: [\n      {\n        type: 'array',\n        required: true,\n        message: 'Please fill the range field !'\n      }\n    ]\n  },\n  multiSelect: {\n    rules: [\n      {\n        type: 'array',\n        required: true,\n        message: 'Please fill the multiple options !'\n      }\n    ]\n  },\n  email: {\n    rules: [\n      {\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      },\n      {\n        required: true,\n        message: 'Please input your E-mail!'\n      }\n    ]\n  },\n  checkBox: {\n    initialValue: true,\n    rules: [\n      {\n        type: 'boolean',\n        required: true,\n        message: 'Please fill the field !'\n      }\n    ]\n  },\n  input: {\n    rules: [\n      {\n        type: 'string',\n        required: true,\n        message: 'Please fill the field !'\n      }\n    ]\n  },\n  number: {\n    rules: [\n      {\n        type: 'number',\n        required: true,\n        message: 'Please fill the field !'\n      }\n    ]\n  }\n};\n\nexport function validation(err: any, fieldsValue: any): any {\n  if (err) {\n    console.log('Error: ', err);\n    return err;\n  }\n\n  // Should format date value before submit.\n  const rangeValue: Array<moment.Moment> = fieldsValue['range-picker'];\n  const rangeTimeValue: Array<moment.Moment> = fieldsValue['range-time-picker'];\n  const values: Object = {\n    ...fieldsValue,\n    'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n    'date-time-picker': fieldsValue['date-time-picker'].format(\n      'YYYY-MM-DD HH:mm:ss'\n    ),\n    'range-picker': [\n      rangeValue[0].format('YYYY-MM-DD'),\n      rangeValue[1].format('YYYY-MM-DD')\n    ],\n    'range-time-picker': [\n      rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\n      rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss')\n    ],\n    'time-picker': fieldsValue['time-picker'].format('HH:mm:ss')\n  };\n  console.log('Received values of form: ', values);\n  return values;\n}\n"],"sourceRoot":"../../src"}