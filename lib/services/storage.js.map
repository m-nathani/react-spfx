{"version":3,"sources":["services/storage.ts"],"names":[],"mappings":";;;;;AAAA,kDAAyC;AAEzC;IAKE,iBAAY,IAA0B;QAH9B,mBAAc,GAAa,gBAAK,CAAC,KAAK,CAAC;QAI7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,gBAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;IAC1D,CAAC;IAEM,qBAAG,GAAV,UAAW,GAAW;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEM,qBAAG,GAAV,UAAW,GAAW,EAAE,IAAS;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAEM,wBAAM,GAAb,UAAc,GAAW;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAEM,0BAAQ,GAAf;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;IAEH,cAAC;AAAD,CAzBA,AAyBC,IAAA;;AAEY,QAAA,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC","file":"services/storage.js","sourcesContent":["import store, { StoreAPI } from 'store2';\n\nexport default class Storage {\n\n  private defaultStorage: StoreAPI = store.local;\n  private storage: StoreAPI;\n\n  constructor(type?: 'local' | 'session') {\n    this.storage = type ? store[type] : this.defaultStorage;\n  }\n\n  public get(key: string) {\n    return this.storage.get(key);\n  }\n\n  public set(key: string, data: any) {\n    return this.storage.set(key, data);\n  }\n\n  public remove(key: string) {\n    return this.storage.remove(key);\n  }\n\n  public clearAll() {\n    return this.storage.clearAll();\n  }\n\n}\n\nexport const storage = new Storage('local');\n"],"sourceRoot":"../../src"}